{"version":3,"sources":["data/db/dexiewDB.js","data/db/dbContext.dexie.js","data/classes/classContext.js","data/classes/classRibbon.js","data/components/example.js","data/searchContext.js","data/components/exampleList.js","layout/Appbar.js","data/components/searchBar.js","data/components/input/fileInput.js","data/components/input/inputDialog.js","data/components/input/resetDBModal.js","layout/drawerItems.js","layout/drawer.js","App.js","serviceWorker.js","index.js"],"names":["db","Dexie","stores","getTrigrams","text","trigrams","Set","end","length","add","slice","Array","from","version","hook","primKey","obj","trans","content","contentWords","mods","hasOwnProperty","open","initializeDB","addData","data","transaction","forEach","d","search","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","query","terms","docKeys","allMatch","result","wrap","_context","prev","next","abrupt","Promise","resolve","all","map","term","where","equals","distinct","primaryKeys","sent","reduce","b","set","filter","k","has","anyOf","toArray","then","arr","doc","stop","_x","apply","this","arguments","regexSearch","pattern","regex","RegExp","test","e","addSchemaClass","name","color","getSchemaClasses","DBContextType","React","createContext","DBContext","props","_React$useState","useState","_React$useState2","slicedToArray","step","setStep","_React$useState3","_React$useState4","ready","setReady","incrementStep","useEffect","api","addDoc","addDocsBatch","_addDocsBatch","docs","dbUtils","updateDoc","setDocCLass","exampleId","className","update","human_label","updateDocsBatch","_search","_callee2","params","results","_context2","_x2","_x3","_regexSearch","_callee3","_context3","_x4","allDocs","n","undefined","limit","react_default","createElement","Provider","value","children","useDB","useContext","randomMC","require","ClassContextType","ClassContext","classes","setClasses","addClass","getColor","values","useClassContext","AddClassDialog","classContext","setName","setOpen","Fragment","Add","onClick","Dialog","onClose","DialogTitle","DialogContent","TextField","onChange","target","label","DialogActions","Button","variant","disabled","ClassRibbon","Grid","container","spacing","cls","item","example","id","style","borderColor","background","useStyles","makeStyles","theme","root","height","overflow","Example","Paper","CardHeader","title","CardContent","Typography","CardActions","classRibbon_ClassRibbon","handleUpdateExample","SearchContextType","SearchContext","examples","setExamples","lastQuery","setlastQuery","_React$useState5","_React$useState6","searching","setSearching","handleQueryChange","searchFunction","useSearch","&:focus","outline","&::-webkit-scrollbar","display","ExampleList","setHeight","width","setWidth","ref","useCallback","node","clientHeight","clientWidth","maxHeight","rowHeight","Container","position","es","rowRenderer","index","key","xs","objectSpread","example_Example","extraStyle","orderIndex","anno_source","schema","rowCount","flexGrow","menuButton","marginRight","bigAvatar","margin","YLabelAppbar","AppBar","rootClass","Toolbar","align","RegexIcon","SvgIcon","SearchBar","doRegex","setDoRegex","_useDebouncedCallback","useDebouncedCallback","debouncedCallback","FormControl","InputLabel","htmlFor","Input","type","endAdornment","InputAdornment","IconButton","aria-label","searchBar_RegexIcon","FormHelperText","LinearProgress","readFileAsync","file","reject","reader","FileReader","onload","onerror","readAsText","FileInput","handleNewFile","extra","contents","files","JSON","parse","handleNewData","helperText","DataIngestor","setData","keys","setKeys","textField","setTextField","_React$useState7","_React$useState8","loading","setLoading","fileInput_FileInput","Fade","in","select","x","MenuItem","CircularProgress","formtedData","DataInputDialog","fileInput_DataIngestor","ResetDBModal","erasing","setErasing","handleClick","clear","DeleteForever","DataItems","ListItem","button","ListItemIcon","Save","ListItemText","primary","ExpandLess","ExpandMore","Collapse","timeoute","unmountOnExit","List","inputDialog_DataInputDialog","resetDBModal_ResetDBModal","DrawerItems","drawerItems_DataItems","classRibbon_AddClassDialog","drawer","defineProperty","breakpoints","up","flexShrink","appBar","marginLeft","concat","toolbar","mixins","drawerPaper","padding","ResponsiveDrawer","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","CardMedia","paddingTop","image","process","Divider","searchBar_SearchBar","drawerItems_DrawerItems","Appbar_YLabelAppbar","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","App","classContext_ClassContext","dbContext_dexie_DBContext","searchContext_SearchContext","CssBaseline","drawer_ResponsiveDrawer","exampleList_ExampleList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.be2e1223.chunk.js","sourcesContent":["//From https://raw.githubusercontent.com/dfahlander/Dexie.js/master/samples/full-text-search/FullTextSearch.js\n\n/*\n    This example is a simple implementation of full-text search based on multi-valued indexes and Dexie hooks.\n    NOTE: Multi-valued indexes are only supported in Opera, Firefox and Chrome. Does not work with IE so far.\n    To see an example that works with IE, see FullTextSearch2.js.\n*/\nimport Dexie from 'dexie'\n\nconst DBNAME = 'DATA'\nconst DATA_SCHEMA = 'data'\nconst CLASS_SCHEMA= 'schema'\n\nvar db = new Dexie(DBNAME);\nconst stores = {}\nstores[DATA_SCHEMA] =\"++id,human_label,model_label,*contentWords\"\nstores[CLASS_SCHEMA]=\"++id,name\"\n\nconst getTrigrams =(text)=>{\n    let trigrams = new Set()\n    for (let end=2; end <text.length; end++){\n        trigrams.add(text.slice(end-2,end+1))\n    }\n    return Array.from(trigrams)\n\n}\n\nconst initializeDB =() =>{\n    db.version(1).stores(stores);\n    const initializeDataDB = ()  =>{\n        db[DATA_SCHEMA].hook(\"creating\", function (primKey, obj, trans) {\n            if (typeof obj.content == 'string') \n                obj.contentWords = getTrigrams(obj.content);\n        });\n        db[DATA_SCHEMA].hook(\"updating\", function (mods, primKey, obj, trans) {\n            if (mods.hasOwnProperty(\"content\")) {\n                // \"content\" property is being updated\n                if (typeof mods.content == 'string')\n                    // \"content\" property was updated to another valid value. Re-index contentWords:\n                    return { contentWords: getTrigrams(mods.content) };\n                else\n                    // \"content\" property was deleted (typeof mods.content === 'undefined') or changed to an unknown type. Remove indexes:\n                    return { contentWords: [] };\n            }\n        \n        });\n        \n        \n        // Open database to allow application code using it.\n        db.open();\n        \n    }\n    initializeDataDB()\n\n\n}\n\ninitializeDB()\n// Add hooks that will index \"content\" for full-text search:\n\n\n\nexport const addData =  (data) => {\n    return db.transaction('rw', db[DATA_SCHEMA], () => {\n        data.forEach(d=>db[DATA_SCHEMA].add(d));\n    })\n}\n\nexport const search = async (query)=>{\n\n    const terms = getTrigrams(query)\n    if (terms.length===0){\n        return Dexie.Promise.resolve([])\n    }\n    const docKeys = await Dexie.Promise.all(terms.map(term=>{\n        return db[DATA_SCHEMA].where(\"contentWords\").equals(term).distinct().primaryKeys()\n    }))\n    if (docKeys.length===0){\n        return Dexie.Promise.resolve([])\n    }\n    const allMatch = docKeys.reduce((a, b) => {\n        const set = new Set(b);\n        return a.filter(k => set.has(k));\n    });\n    let result = db[DATA_SCHEMA].where(\"id\").anyOf(allMatch).toArray().then(arr=>{\n        return  arr.filter(doc=>doc.content.search(query) !==-1)\n    });\n    // Finnaly, filter to find the exact query\n    \n    return result\n}\n\nexport const regexSearch =(pattern)=>{\n    \n    try{\n        //temp try catch block to avoid execptions when partial pattern is sent\n        \n\n    const regex = new RegExp(pattern)\n    return db[DATA_SCHEMA].filter(doc=>regex.test(doc.content)).toArray()\n}\ncatch (e){\n    return Dexie.Promise.resolve([])\n}\n    \n}\n\nexport const first =(n=20)=>{\n    return db[DATA_SCHEMA].limit(n).toArray()\n}\nexport const resetAll = ()=>{\n    return Dexie.Promise.all([\n        db[DATA_SCHEMA].clear(),\n        db[CLASS_SCHEMA].clear()\n    ])\n}\n\nexport const addSchemaClass =(name,color,)=>{\n    \n        return db[CLASS_SCHEMA].add({name,color})\n}\n\nexport const getSchemaClasses =()=>{\n    return db[CLASS_SCHEMA].toArray()\n}\n\nexport const applyClassToExample =(exampleId,className)=>{\n    return db[DATA_SCHEMA].update(exampleId,{human_label:className})\n}\n\n","import React from 'react'\nimport * as dbUtils from './dexiewDB'\n\nconst DBContextType = React.createContext(\"dbContext\");\n\nexport const DBContext = (props)=>{\n    const [step,setStep] = React.useState(0)\n    const [ready,setReady] = React.useState(false)\n\n    const incrementStep = ()=>setStep(step+1) // trigger a rerender when modifying the db\n    const init =  ()=>{\n\n        setReady(true)\n    \n    }\n    React.useEffect(init,[1])\n\n    const api = {\n        addDoc: (doc)=>{\n            // dbUtils.addDoc(doc)\n            incrementStep();\n        },\n        addDocsBatch: async (docs)=>{\n            const result = await dbUtils.addData(docs)\n            return result\n        },\n        updateDoc:(doc)=>{\n            // dbUtils.updateDoc(doc)\n            incrementStep();\n        },\n        setDocCLass: (exampleId,className)=>{\n            dbUtils.applyClassToExample(exampleId,className)\n            .then(incrementStep)\n            \n        },\n        updateDocsBatch:(docs)=>{\n            // for (const doc of docs){\n            //     // dbRef.current.updateDoc(doc)\n            // }\n            incrementStep();\n        },\n        search:  async (query,params)=>{\n            const results = await dbUtils.search(query)\n            return  results\n        },\n        regexSearch:  async (pattern,)=>{\n            const results = await dbUtils.regexSearch(pattern)\n            return  results\n        },\n\n        allDocs:()=>{\n\n            return dbUtils.first(20)\n        },\n        step\n\n    }\n    return (\n        <DBContextType.Provider value={api}>\n            {ready ? props.children : null}\n        </DBContextType.Provider>\n    )\n}\n\nexport const useDB = ()=>{\n    const context = React.useContext(DBContextType)\n    return context;\n}","import React from 'react'\nimport { addSchemaClass, getSchemaClasses } from '../db/dexiewDB';\n\nvar randomMC = require('random-material-color');\n\nconst ClassContextType = React.createContext('classContext')\nexport const ClassContext = (props)=>{\n\n\n    const [classes,setClasses] = React.useState({});\n    React.useEffect( ()=>{\n        getSchemaClasses().then(classes=>{\n            setClasses(classes);\n\n        })\n\n    },[1])\n    \n    const addClass = async (name,)=>{\n        const color =randomMC.getColor({text:name});\n        await addSchemaClass(name,color)\n        const classes =await getSchemaClasses()\n        setClasses(classes);\n    }\n\n    return (\n        <ClassContextType.Provider value ={{classes:Object.values(classes),addClass}}>\n            {props.children}\n        </ClassContextType.Provider>\n    )\n}\n\nexport const useClassContext = ()=>{\n    return React.useContext(ClassContextType)\n}","import React from 'react'\nimport { useClassContext } from './classContext';\nimport { Grid, Button,  Dialog, DialogTitle, DialogContent, TextField, DialogActions } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { useDB } from '../db/dbContext.dexie';\n\nexport const AddClassDialog = (props)=>{\n    const classContext =useClassContext()\n    const [name,setName] = React.useState(null)\n    const [open,setOpen] = React.useState(false);\n\n    return (\n        <React.Fragment>\n            <Add onClick={()=>setOpen(true)}/>\n\n        <Dialog open={open} onClose={()=>setOpen(false)}>\n            <DialogTitle>\n                Add a new class\n            </DialogTitle>\n            <DialogContent>\n                <TextField \n                    onChange={e=>setName(e.target.value)}\n                    value={name}\n                    label=\"Choose a name for your class\"\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button \n                variant=\"contained\" \n                color=\"primary\" \n                disabled={name===null} \n                onClick={()=>{\n                    classContext.addClass(name)\n                    setOpen(false)\n                    setName(null)\n                \n                }}\n                >\n                Add {name}\n                </Button>\n            </DialogActions>\n        </Dialog>\n        </React.Fragment>\n    )\n}\nexport const ClassRibbon = (props)=>{\n    const db = useDB()\n    const classContext =useClassContext()\n    const applyClass =(name)=>{\n        debugger;\n        db.setDocCLass(props.example.id,name)\n    }\n    return(\n    <Grid container spacing={2}>\n        \n        {classContext.classes.map(cls=>(\n            <Grid item>\n            <Button \n                variant={props.example.human_label===cls.name ? \"contained\" : \"outlined\"}\n                onClick={()=>{applyClass(cls.name)}}\n                style={{borderColor:cls.color,background:props.example.human_label===cls.name ? cls.color : undefined}}>\n                {cls.name}\n            </Button>\n            </Grid>\n        ))}\n    </Grid>\n)\n}","import React from 'react'\nimport { Typography, Paper, CardHeader, CardContent,  CardActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { ClassRibbon } from '../classes/classRibbon';\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'80%',\n        overflow:'auto'\n    }\n}))\nexport const Example = (props)=>{\n    const classes= useStyles()\n    return (\n        <Paper className={classes.root} id={props.example.id}>\n            <CardHeader\n                title={props.example.id}\n            ></CardHeader>\n            <CardContent>\n            <Typography>\n                {props.example.content}\n            </Typography>\n            </CardContent>\n            <CardActions>\n                <ClassRibbon example={props.example} handleUpdateExample={props.handleUpdateExample}/>\n            </CardActions>\n        </Paper>\n    )\n}","import React from 'react'\nimport { useDB } from './db/dbContext.dexie';\n\n\nconst SearchContextType = React.createContext('searchContext')\nexport const SearchContext = (props)=>{\n    const db = useDB();\n    const [examples,setExamples] = React.useState(db.allDocs())\n    const [lastQuery,setlastQuery] = React.useState(null);\n    const [searching,setSearching] = React.useState(false)\n\n    React.useEffect(()=>{\n        // This runs the last query when something happens in the db. \n        // E.g. if we apply a class we refresh the data\n        // Lots of potential for UX bugs\n        //TODO improve this\n        handleQueryChange(lastQuery)\n    },[db.step])\n    const handleQueryChange = (query,regex=false)=>{\n        \n        const searchFunction = regex ? db.regexSearch : db.search\n        if (!query || query.length <1){\n            db.allDocs().then(results=>{\n\n                setExamples(results)\n            })\n            \n        }else{\n            setSearching(true)\n            searchFunction(query).then(results=>{\n                setExamples(results);\n                setSearching(false)\n    \n            })\n\n    \n        }\n        setlastQuery(query)\n    }\n\n    return (\n        <SearchContextType.Provider value={{examples,handleQueryChange,searching}}>\n            {props.children}\n        </SearchContextType.Provider>\n    )\n}\n\nexport const useSearch =()=>{\n    return  React.useContext(SearchContextType)\n}","/* Wrapper component for a long list of examples. \nIt starts by showing the first N examples, without mounting the rest. As the user scrolls comonents are mounted and unmounted\n*/\nimport React from 'react'\nimport { makeStyles, Grid, Container,  } from '@material-ui/core';\nimport { List } from 'react-virtualized'\nimport { Example } from './example';\nimport { useSearch } from '../searchContext';\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '&:focus': {\n            outline: 0\n        },\n\n        '&::-webkit-scrollbar': {\n            display: 'hidden'\n        }\n\n    }\n}))\nexport const ExampleList = (props) => {\n    const [height, setHeight] = React.useState(0);\n    const [width, setWidth] = React.useState(0);\n    const search = useSearch()\n    const ref = React.useCallback(node => {\n        if (node !== null && height === 0) {\n\n            setHeight(node.clientHeight);\n            setWidth(node.clientWidth);\n        }\n    })\n    const examples = search.examples;\n\n    const maxHeight = examples.length > 1 ? height / 3 : height * 2 / 3\n    const rowHeight = examples.length > 1 ? maxHeight * 2 : height\n\n\n    const exampleRenderer = ({ index, key, style }) => {\n        const example = examples[index]\n        return (\n            <Grid item xs={12} style={{ ...style,  }} key={key} >\n                <Example\n                    handleUpdateExample={props.handleUpdateExample}\n                    extraStyle={{ style }}\n                    orderIndex={1}\n                    key={example.id}\n                    example={example}\n                    anno_source={props.anno_source}\n                    schema={props.schema}\n                    maxHeight={maxHeight}\n                />\n\n            </Grid>\n\n        )\n    }\n    const classes = useStyles()\n    return (\n        <Container style={{height:'85vh'}}>\n        <div className={classes.root} style={{ position: 'relative', height: '100%', width:'100%', overflow: 'hidden' }} ref={ref}>\n        {examples.length} examples \n        <Grid container>\n            <List\n                height={height}\n                rowHeight={rowHeight}\n                rowRenderer={exampleRenderer}\n                width={width}\n                rowCount={examples.length}\n            />\n            </Grid>\n        </div>\n        </Container>\n    )\n}\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 120,\n    height: 60,\n  },\n\n}));\n\nexport const YLabelAppbar =(props) => {\n  const classes = useStyles();\n\n  return (\n      <AppBar position=\"static\" className={props.rootClass}>\n\n      \n        <Toolbar>\n\n          <Typography align=\"left\" variant=\"h6\" className={classes.title}>\n            Why Label When You Can Search ? \n          </Typography>\n\n        </Toolbar>\n      </AppBar>\n  );\n}\n","import React from 'react'\nimport {  LinearProgress, FormControl, InputLabel, Input, InputAdornment, IconButton, FormHelperText, SvgIcon } from '@material-ui/core';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSearch } from '../searchContext';\nconst RegexIcon = (props)=>(\n    <SvgIcon {...props}>\n        <g id=\"regular-expression\">\n\t\t<path id=\"left-bracket\" d=\"M3 12.045c0-.99.15-1.915.45-2.777A6.886 6.886 0 0 1 4.764 7H6.23a7.923 7.923 0 0 0-1.25 2.374 8.563 8.563 0 0 0 .007 5.314c.29.85.7 1.622 1.23 2.312h-1.45a6.53 6.53 0 0 1-1.314-2.223 8.126 8.126 0 0 1-.45-2.732\"/>\n\t\t<path id=\"dot\" d=\"M10 16a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n\t\t<path id=\"star\" d=\"M14.25 7.013l-.24 2.156 2.187-.61.193 1.47-1.992.14 1.307 1.74-1.33.71-.914-1.833-.8 1.822-1.38-.698 1.296-1.74-1.98-.152.23-1.464 2.14.61-.24-2.158h1.534\"/>\n\t\t<path id=\"right-bracket\" d=\"M21 12.045c0 .982-.152 1.896-.457 2.744A6.51 6.51 0 0 1 19.236 17h-1.453a8.017 8.017 0 0 0 1.225-2.31c.29-.855.434-1.74.434-2.66 0-.91-.14-1.797-.422-2.66a7.913 7.913 0 0 0-1.248-2.374h1.465a6.764 6.764 0 0 1 1.313 2.28c.3.86.45 1.782.45 2.764\"/>\n\t</g>\n\n    </SvgIcon>\n)\nexport const SearchBar = (props)=>{\n    const [doRegex,setDoRegex] = React.useState(false)\n    const search = useSearch()\n    const [debouncedCallback] = useDebouncedCallback(\n        // function\n        (query) => {\n            search.handleQueryChange(query,doRegex)\n        },\n        // delay in ms\n        250\n      );\n    \n    return (\n\n        <FormControl >\n        <InputLabel htmlFor=\"searchbar\">Search for something</InputLabel>\n        <Input\n          id=\"searchbar\"\n          type=\"text\"\n          \n          onChange={e=>debouncedCallback(e.target.value)}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton aria-label=\"Toggle regex\" onClick={()=>{setDoRegex(!doRegex)}} color={doRegex ? \"primary\" :undefined} >\n                <RegexIcon/>\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n                <FormHelperText id=\"weight-helper-text\">{search.searching ? <LinearProgress /> : \"Runs a full text search on your data\"}</FormHelperText>\n\n      </FormControl>\n\n    )\n}","import React from 'react'\nimport { TextField, Fade, MenuItem,  Button, CircularProgress } from '@material-ui/core';\n\nimport { useDB } from '../../db/dbContext.dexie';\n\nexport function readFileAsync(file) {\n    return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n\n        reader.onerror = reject;\n\n        reader.readAsText(file);\n    })\n}\nexport const FileInput = (props) => {\n    const handleNewFile = async (e, extra) => {\n        //Todo move this to a webworker (requires ejecting https://github.com/developit/workerize-loader/issues/35)\n        const file = e.target.files[0]\n        const contents = await readFileAsync(file);\n        const data = JSON.parse(contents);\n        props.handleNewData(data)\n    }\n    return (\n        <TextField\n            type=\"file\"\n            label=\"Add a file\"\n            onChange={handleNewFile}\n            helperText=\"Select a file\"\n        />\n    )\n}\n\n\nexport const DataIngestor = (props) => {\n    const [data, setData] = React.useState(null)\n    const [keys, setKeys] = React.useState([]);\n    const [textField, setTextField] = React.useState(null)\n    const [loading,setLoading] = React.useState(false)\n    const db = useDB()\n    const handleNewData = (data) => {\n        setKeys(Object.keys(data[0]));\n        setData(data);\n    }\n\n    const handleSubmit = () => {\n        setLoading(true)\n        const formtedData = data.map((x, id) => ({\n            content: x[textField]\n        }))\n        db.addDocsBatch(formtedData)\n        .then(()=>setLoading(false))\n        ;\n    }\n    return (\n        <form>\n            <FileInput handleNewData={handleNewData} />\n            <Fade in={keys.length}>\n                <TextField\n                    onChange={e => setTextField(e.target.value)}\n                    value={textField}\n\n                    select\n                    label=\"Text Field\"\n                    helperText=\"Please select the field in the data we'll be labeling\"\n                    margin=\"normal\"\n                >\n\n                    {keys.map(x => (\n                        <MenuItem value={x}>{x}</MenuItem>\n                    ))}\n                </TextField>\n            </Fade>\n            {loading ? <CircularProgress /> : \n            <Button\n                onClick={handleSubmit}\n                disabled={textField === null}\n                variant=\"outlined\"\n                color=\"primary\"\n            >\n                Load Data\n                </Button>\n            }\n        </form>\n    )\n}","import React from 'react'\nimport { DialogTitle, Dialog, DialogContent, IconButton,  } from '@material-ui/core';\nimport { DataIngestor } from './fileInput';\nimport { Add } from '@material-ui/icons';\nexport const DataInputDialog = (props) => {\n\n    const [open, setOpen] = React.useState(false);\n    return (\n        <React.Fragment>\n            <IconButton color=\"inherit\" onClick={() => setOpen(true)}>\n                <Add />\n            </IconButton>\n            <Dialog open={open} onClose={() => setOpen(false)}>\n                <DialogTitle>Add some data</DialogTitle>\n                <DialogContent>\n                    <DataIngestor />\n                </DialogContent>\n            </Dialog>\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport {  DialogTitle, Dialog, DialogActions, Button, CircularProgress, IconButton } from '@material-ui/core';\nimport { DeleteForever } from '@material-ui/icons';\nimport { resetAll } from '../../db/dexiewDB';\nexport const ResetDBModal =(props)=>{\n    const [open,setOpen] = React.useState(false);\n    const [erasing,setErasing] = React.useState(false)\n    const handleClick = async ()=>{\n        setErasing(true)\n        await resetAll();\n        setOpen(false)\n        setErasing(false)\n    }\n    return (\n        <React.Fragment>\n            <IconButton\n            color='inherit'\n                onClick={()=>setOpen(true)}\n            ><DeleteForever/></IconButton>\n\n            <Dialog open={open} onClose={()=>setOpen(false)}>\n                <DialogTitle>\n                    Erase all the data\n            </DialogTitle>\n            <DialogActions>\n            { erasing ? <CircularProgress /> :\n             <Button onClick={handleClick} variant=\"contained\" color=\"danger\">Yes Erase It</Button> \n            }\n            </DialogActions>\n            </Dialog>\n\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport { List, ListItem, ListItemIcon, ListItemText, Collapse } from '@material-ui/core';\nimport { Save, ExpandLess, ExpandMore,  } from '@material-ui/icons';\nimport { DataInputDialog } from '../data/components/input/inputDialog';\nimport { ResetDBModal } from '../data/components/input/resetDBModal';\nimport { AddClassDialog } from '../data/classes/classRibbon';\nconst DataItems = (props) => {\n    const [open, setOpen] = React.useState(true)\n    return (\n        <React.Fragment>\n            <ListItem button key={\"Data\"} onClick={() => setOpen(!open)}>\n                <ListItemIcon> <Save /></ListItemIcon>\n                <ListItemText primary={\"Data\"} />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeoute=\"auto\" unmountOnExit>\n                <List>\n                    <ListItem>\n                        <ListItemIcon>\n                            <DataInputDialog />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Add More Data\" />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon>\n                            <ResetDBModal />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Delete All Data\" />\n                    </ListItem>\n\n                </List>\n            </Collapse>\n        </React.Fragment>\n    )\n}\nexport const DrawerItems = (props) => {\n\n    return (\n        <List>\n            <DataItems />\n            <ListItem button>\n                <ListItemIcon>\n                    < AddClassDialog />\n                </ListItemIcon>\n                <ListItemText primary=\"Classes\" />\n            </ListItem>\n\n        </List>\n    )\n\n}","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { YLabelAppbar } from './Appbar';\nimport { SearchBar } from '../data/components/searchBar';\nimport { CardMedia } from '@material-ui/core';\nimport { DrawerItems } from './drawerItems';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport const  ResponsiveDrawer = (props) => {\n  const { container } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} >\n      <CardMedia\n      style={{paddingTop:'25%'}}\n        image={process.env.PUBLIC_URL + '/img/logo.png'}\n      />\n\n      </div>\n      \n\n      <Divider />\n      <List>\n      \n          <ListItem >\n            <SearchBar />\n          </ListItem>\n      \n      </List>\n      <Divider />\n      <DrawerItems />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n        <YLabelAppbar handleDrawerToggle={handleDrawerToggle} rootClass={classes.appBar}/>\n      <nav className={classes.drawer} aria-label=\"Mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </div>\n\n)\n        }","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Container,} from '@material-ui/core'\nimport { DBContext } from './data/db/dbContext.dexie';\nimport { ExampleList, } from './data/components/exampleList';\nimport { ClassContext } from './data/classes/classContext';\nimport { SearchContext } from './data/searchContext';\nimport { ResponsiveDrawer } from './layout/drawer';\nfunction App() {\n  return (\n    <React.Fragment>\n      \n      <ClassContext>\n      <DBContext>\n        <SearchContext>\n      \n            <CssBaseline />\n            <ResponsiveDrawer />\n            <Container>\n            \n            \n            <ExampleList />\n            </Container>\n            </SearchContext>\n        </DBContext>\n      </ClassContext>\n      \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}