{"version":3,"sources":["data/components/input/fileInput.js","data/db/indexCache.js","data/db/dexiewDB.js","data/db/dbContext.dexie.js","data/classes/classContext.js","data/classes/classRibbon.js","data/components/example.js","data/searchContext.js","data/components/searchBar.js","data/components/exampleList.js","data/components/input/inputDialog.js","data/components/input/resetDBModal.js","layout/Appbar.js","layout/drawerItems.js","layout/drawer.js","App.js","serviceWorker.js","index.js"],"names":["require","readFileAsync","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","FileInput","props","handleNewFile","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","e","extra","contents","data","wrap","_context","prev","next","target","files","sent","JSON","parse","handleNewData","stop","_x","_x2","apply","this","arguments","react_default","createElement","TextField","type","label","onChange","helperText","DataIngestor","_React$useState","React","useState","_React$useState2","slicedToArray","setData","_React$useState3","_React$useState4","keys","setKeys","_React$useState5","_React$useState6","textField","setTextField","_React$useState7","_React$useState8","loading","setLoading","db","useDB","fileInput_FileInput","Fade","in","length","value","select","margin","map","x","MenuItem","CircularProgress","Button","onClick","formtedData","id","content","addDocsBatch","then","disabled","variant","color","Dexie","version","stores","elastic","resetIndex","_ref5","_callee5","_context5","delete","window","location","reload","_x5","getTrigrams","text","trigrams","Set","end","add","slice","Array","from","hook","primKey","obj","trans","contentWords","mods","hasOwnProperty","open","initializeDB","addData","transaction","forEach","d","search","query","terms","docKeys","allMatch","all","term","where","equals","distinct","primaryKeys","reduce","b","set","filter","k","has","anyOf","toArray","arr","doc","abrupt","addSchemaClass","name","getSchemaClasses","DBContextType","createContext","DBContext","step","setStep","ready","setReady","incrementStep","useEffect","api","addDoc","_addDocsBatch","docs","dbUtils","updateDoc","updateDocsBatch","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","err","return","_search","_callee2","params","results","_context2","_x3","allDocs","n","limit","Provider","children","useContext","randomMC","ClassContextType","ClassContext","classes","setClasses","addClass","getColor","values","useClassContext","AddClassDialog","classContext","setName","setOpen","Fragment","Add","Dialog","onClose","DialogTitle","DialogContent","DialogActions","ClassRibbon","applyClass","exampleId","className","example","update","human_label","handleUpdateExample","Grid","container","spacing","cls","item","style","borderColor","background","useStyles","makeStyles","theme","root","height","overflow","Example","Paper","CardHeader","title","CardContent","Typography","CardActions","classRibbon_ClassRibbon","SearchContextType","SearchContext","examples","setExamples","lastQuery","setlastQuery","searching","setSearching","handleQueryChange","useSearch","SearchBar","_useDebouncedCallback","useDebouncedCallback","debouncedCallback","LinearProgress","fullWidth","&:focus","outline","&::-webkit-scrollbar","display","ExampleList","setHeight","width","setWidth","ref","useCallback","node","clientHeight","clientWidth","maxHeight","rowHeight","Container","position","es","rowRenderer","index","key","xs","objectSpread","example_Example","extraStyle","orderIndex","anno_source","schema","rowCount","DataInputDialog","IconButton","fileInput_DataIngestor","ResetDBModal","erasing","setErasing","handleClick","DeleteForever","flexGrow","menuButton","marginRight","bigAvatar","YLabelAppbar","AppBar","rootClass","Toolbar","align","inputDialog_DataInputDialog","resetDBModal_ResetDBModal","DataItems","ListItem","button","ListItemIcon","Save","ListItemText","primary","ExpandLess","ExpandMore","Collapse","timeoute","unmountOnExit","List","DrawerItems","drawerItems_DataItems","classRibbon_AddClassDialog","drawer","defineProperty","breakpoints","up","flexShrink","appBar","marginLeft","concat","toolbar","mixins","drawerPaper","padding","ResponsiveDrawer","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","CardMedia","paddingTop","image","process","Divider","searchBar_SearchBar","drawerItems_DrawerItems","Appbar_YLabelAppbar","aria-label","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","App","classContext_ClassContext","dbContext_dexie_DBContext","searchContext_SearchContext","CssBaseline","drawer_ResponsiveDrawer","exampleList_ExampleList","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.f750dfc9.chunk.js","sourcesContent":["import React from 'react'\nimport { TextField, Fade, MenuItem, Select, FormControl, Button, CircularProgress } from '@material-ui/core';\n\nimport { useDB } from '../../db/dbContext.dexie';\nconst uuidv4 = require('uuid/v4');\n\nexport function readFileAsync(file) {\n    return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n\n        reader.onerror = reject;\n\n        reader.readAsText(file);\n    })\n}\nexport const FileInput = (props) => {\n    const handleNewFile = async (e, extra) => {\n        //Todo move this to a webworker (requires ejecting https://github.com/developit/workerize-loader/issues/35)\n        const file = e.target.files[0]\n        const contents = await readFileAsync(file);\n        const data = JSON.parse(contents);\n        props.handleNewData(data)\n    }\n    return (\n        <TextField\n            type=\"file\"\n            label=\"Add a file\"\n            onChange={handleNewFile}\n            helperText=\"Select a file\"\n        />\n    )\n}\n\n\nexport const DataIngestor = (props) => {\n    const [data, setData] = React.useState(null)\n    const [keys, setKeys] = React.useState([]);\n    const [textField, setTextField] = React.useState(null)\n    const [loading,setLoading] = React.useState(false)\n    const db = useDB()\n    const handleNewData = (data) => {\n        setKeys(Object.keys(data[0]));\n        setData(data);\n    }\n\n    const handleSubmit = () => {\n        setLoading(true)\n        const formtedData = data.map((x, id) => ({\n            content: x[textField]\n        }))\n        db.addDocsBatch(formtedData)\n        .then(()=>setLoading(false))\n        ;\n    }\n    return (\n        <form>\n            <FileInput handleNewData={handleNewData} />\n            <Fade in={keys.length}>\n                <TextField\n                    onChange={e => setTextField(e.target.value)}\n                    value={textField}\n\n                    select\n                    label=\"Text Field\"\n                    helperText=\"Please select the field in the data we'll be labeling\"\n                    margin=\"normal\"\n                >\n\n                    {keys.map(x => (\n                        <MenuItem value={x}>{x}</MenuItem>\n                    ))}\n                </TextField>\n            </Fade>\n            {loading ? <CircularProgress /> : \n            <Button\n                onClick={handleSubmit}\n                disabled={textField === null}\n                variant=\"outlined\"\n                color=\"primary\"\n            >\n                Load Data\n                </Button>\n            }\n        </form>\n    )\n}","import Dexie from 'dexie';\nimport { readFileAsync } from '../components/input/fileInput';\nconst DBNAME = 'INDEX12'\nconst db = new Dexie(DBNAME);\n\n// Declare tables, IDs and indexes\ndb.version(1).stores({\n    elastic: 'id,content'\n});\n\nconst saveIndex = async (index,id=1)=>{\n    var blob = new Blob([JSON.stringify(index, null, 2)], {type : 'application/json'});\n    const result = await db.elastic.add({id,index:blob})\n    return result\n}\n\nconst doUpdateIndex = async (index,id=1)=>{\n    var blob = new Blob([JSON.stringify(index,)], {type : 'application/json'});\n    const result = await db.elastic.update(id,{index:blob})\n    return result\n}\n\n\nexport const getIndex = async (props)=>{\n    const index = await db.elastic.get(1);\n    if(index!=undefined){\n    debugger;\n\n        const data = await readFileAsync(index.index);\n        return JSON.parse(data)\n    }\n    \n\n}\n\n\n\nexport const updateIndex = async (index)=>{\n    let result \n    debugger;\n    if (await db.elastic.get(1)){\n        result = await doUpdateIndex(index);\n    }else{\n        result =await saveIndex(index)\n    }\n\n    return result;\n}\n\nexport const resetIndex = async (props)=>{\n    await db.elastic.delete(1);\n    window.location.reload()\n}","//From https://raw.githubusercontent.com/dfahlander/Dexie.js/master/samples/full-text-search/FullTextSearch.js\n\n/*\n    This example is a simple implementation of full-text search based on multi-valued indexes and Dexie hooks.\n    NOTE: Multi-valued indexes are only supported in Opera, Firefox and Chrome. Does not work with IE so far.\n    To see an example that works with IE, see FullTextSearch2.js.\n*/\nimport Dexie from 'dexie'\nconst DBNAME = 'DATA'\nconst DATA_SCHEMA = 'data'\nconst CLASS_SCHEMA= 'schema'\n\nvar db = new Dexie(DBNAME);\nconst stores = {}\nstores[DATA_SCHEMA] =\"++id,human_label,model_label,*contentWords\"\nstores[CLASS_SCHEMA]=\"++id,name\"\n\nconst getTrigrams =(text)=>{\n    let trigrams = new Set()\n    for (let end=2; end <text.length; end++){\n        trigrams.add(text.slice(end-2,end+1))\n    }\n    return Array.from(trigrams)\n\n}\nconst getTrigramsForQuery =(text)=>{\n    //To query we don't need all the trigrams, we can take them sequentially\n    \n    let trigrams = new Set()\n    for (let end=2; end <text.length+1; end+=3){\n        const tg = text.slice(end-2,end+1)\n        trigrams.add(tg)\n    }\n    debugger;\n    return Array.from(trigrams)\n\n}\nfunction getAllWords(text) {\n    /// <param name=\"text\" type=\"String\"></param>\n    var allWordsIncludingDups = text.split(' ');\n    var wordSet = allWordsIncludingDups.reduce(function (prev, current) {\n        prev[current] = true;\n        return prev;\n    }, {});\n    return Object.keys(wordSet);\n}\n\nconst initializeDB =() =>{\n    db.version(1).stores(stores);\n    const initializeDataDB = ()  =>{\n        db[DATA_SCHEMA].hook(\"creating\", function (primKey, obj, trans) {\n            debugger;\n            if (typeof obj.content == 'string') \n                obj.contentWords = getTrigrams(obj.content);\n        });\n        db[DATA_SCHEMA].hook(\"updating\", function (mods, primKey, obj, trans) {\n            if (mods.hasOwnProperty(\"content\")) {\n                // \"content\" property is being updated\n                if (typeof mods.content == 'string')\n                    // \"content\" property was updated to another valid value. Re-index contentWords:\n                    return { contentWords: getTrigrams(mods.content) };\n                else\n                    // \"content\" property was deleted (typeof mods.content === 'undefined') or changed to an unknown type. Remove indexes:\n                    return { contentWords: [] };\n            }\n        \n        });\n        \n        \n        // Open database to allow application code using it.\n        db.open();\n        \n    }\n    initializeDataDB()\n\n\n}\n\ninitializeDB()\n// Add hooks that will index \"content\" for full-text search:\n\n\n\nexport const addData =  (data) => {\n    return db.transaction('rw', db[DATA_SCHEMA], () => {\n        data.forEach(d=>db[DATA_SCHEMA].add(d));\n    })\n}\n\nexport const search = async (query)=>{\n\n    const terms = getTrigrams(query)\n    const docKeys = await Dexie.Promise.all(terms.map(term=>{\n        return db[DATA_SCHEMA].where(\"contentWords\").equals(term).distinct().primaryKeys()\n    }))\n    const allMatch = docKeys.reduce((a, b) => {\n        const set = new Set(b);\n        return a.filter(k => set.has(k));\n    });\n    debugger;\n    let result = db[DATA_SCHEMA].where(\"id\").anyOf(allMatch).toArray().then(arr=>{\n        return  arr.filter(doc=>doc.content.search(query) !==-1)\n    });\n    // Finnaly, filter to find the exact query\n    \n    return result\n}\n\nexport const first =(n=20)=>{\n    return db[DATA_SCHEMA].limit(n).toArray()\n}\nexport const reset = ()=>{\n    return db[DATA_SCHEMA].clear()\n}\n\nexport const addSchemaClass =(name,color,)=>{\n    \n        return db[CLASS_SCHEMA].add({name,color})\n}\n\nexport const getSchemaClasses =()=>{\n    return db[CLASS_SCHEMA].toArray()\n}\n\nexport const applyClassToExample =(exampleId,className)=>{\n    return db[DATA_SCHEMA].update(exampleId,{human_label:className})\n}\n\n","import React from 'react'\nimport { getIndex, updateIndex,resetIndex } from './indexCache';\nimport { Fab } from '@material-ui/core';\nimport { ClearAll } from '@material-ui/icons';\nimport * as dbUtils from './dexiewDB'\nvar elasticlunr = require('elasticlunr');\n\nconst DBContextType = React.createContext(\"dbContext\");\n\nexport const DBContext = (props)=>{\n    const [step,setStep] = React.useState(0)\n    const [ready,setReady] = React.useState(false)\n\n    const incrementStep = ()=>setStep(step+1) // trigger a rerender when modifying the db\n    const init =  ()=>{\n\n        setReady(true)\n    \n    }\n    React.useEffect(init,[1])\n\n    const api = {\n        addDoc: (doc)=>{\n            // dbUtils.addDoc(doc)\n            incrementStep();\n        },\n        addDocsBatch: async (docs)=>{\n            const result = await dbUtils.addData(docs)\n        },\n        updateDoc:(doc)=>{\n            // dbUtils.updateDoc(doc)\n            incrementStep();\n        },\n        updateDocsBatch:(docs)=>{\n            for (const doc of docs){\n                // dbRef.current.updateDoc(doc)\n            }\n            incrementStep();\n        },\n        search:  async (query,params)=>{\n            const results = await dbUtils.search(query)\n            debugger;\n            return  results\n        },\n        allDocs:()=>{\n\n            return dbUtils.first(20)\n        },\n        step\n\n    }\n    return (\n        <DBContextType.Provider value={api}>\n            {ready ? props.children : null}\n        </DBContextType.Provider>\n    )\n}\n\nexport const useDB = ()=>{\n    const context = React.useContext(DBContextType)\n    return context;\n}","import React from 'react'\nimport { addSchemaClass, getSchemaClasses } from '../db/dexiewDB';\n\nvar randomMC = require('random-material-color');\n\nconst ClassContextType = React.createContext('classContext')\nexport const ClassContext = (props)=>{\n\n\n    const [classes,setClasses] = React.useState({});\n    React.useEffect( ()=>{\n        getSchemaClasses().then(classes=>{\n            setClasses(classes);\n\n        })\n\n    },[1])\n    \n    const addClass = async (name,)=>{\n        const color =randomMC.getColor({text:name});\n        await addSchemaClass(name,color)\n        const classes =await getSchemaClasses()\n        setClasses(classes);\n    }\n\n    return (\n        <ClassContextType.Provider value ={{classes:Object.values(classes),addClass}}>\n            {props.children}\n        </ClassContextType.Provider>\n    )\n}\n\nexport const useClassContext = ()=>{\n    return React.useContext(ClassContextType)\n}","import React from 'react'\nimport { useClassContext } from './classContext';\nimport { Grid, Button, IconButton, Dialog, DialogTitle, DialogContent, TextField, DialogActions } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport { applyClassToExample } from '../db/dexiewDB';\n\nexport const AddClassDialog = (props)=>{\n    const classContext =useClassContext()\n    const [name,setName] = React.useState(null)\n    const [open,setOpen] = React.useState(false);\n\n    return (\n        <React.Fragment>\n            <Add onClick={()=>setOpen(true)}/>\n\n        <Dialog open={open} onClose={()=>setOpen(false)}>\n            <DialogTitle>\n                Add a new class\n            </DialogTitle>\n            <DialogContent>\n                <TextField \n                    onChange={e=>setName(e.target.value)}\n                    value={name}\n                    label=\"Choose a name for your class\"\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button \n                variant=\"contained\" \n                color=\"primary\" \n                disabled={name===null} \n                onClick={()=>{\n                    classContext.addClass(name)\n                    setOpen(false)\n                    setName(null)\n                \n                }}\n                >\n                Add {name}\n                </Button>\n            </DialogActions>\n        </Dialog>\n        </React.Fragment>\n    )\n}\nexport const ClassRibbon = (props)=>{\n    const classContext =useClassContext()\n    const applyClass =(name)=>{\n        debugger;\n        applyClassToExample(props.example.id,name)\n        .then(props.handleUpdateExample)\n    }\n    return(\n    <Grid container spacing={2}>\n        \n        {classContext.classes.map(cls=>(\n            <Grid item>\n            <Button \n                variant={props.example.human_label==cls.name ? \"contained\" : \"outlined\"}\n                onClick={()=>{applyClass(cls.name)}}\n                style={{borderColor:cls.color,background:props.example.human_label===cls.name ? cls.color : undefined}}>\n                {cls.name}\n            </Button>\n            </Grid>\n        ))}\n    </Grid>\n)\n}","import React from 'react'\nimport { Typography, Paper, CardHeader, CardContent, CardActionArea, CardActions } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport { ClassRibbon } from '../classes/classRibbon';\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'80%',\n        overflow:'auto'\n    }\n}))\nexport const Example = (props)=>{\n    const classes= useStyles()\n    return (\n        <Paper className={classes.root} id={props.example.id}>\n            <CardHeader\n                title={props.example.id}\n            ></CardHeader>\n            <CardContent>\n            <Typography>\n                {props.example.content}\n            </Typography>\n            </CardContent>\n            <CardActions>\n                <ClassRibbon example={props.example} handleUpdateExample={props.handleUpdateExample}/>\n            </CardActions>\n        </Paper>\n    )\n}","import React from 'react'\nimport { useDB } from './db/dbContext.dexie';\n\n\nconst SearchContextType = React.createContext('searchContext')\nexport const SearchContext = (props)=>{\n    const db = useDB();\n    const [examples,setExamples] = React.useState(db.allDocs())\n    const [lastQuery,setlastQuery] = React.useState(null);\n    const [searching,setSearching] = React.useState(false)\n\n    React.useEffect(()=>{\n        handleQueryChange(lastQuery)\n    },[db.step])\n    const handleQueryChange = (query)=>{\n        if (!query || query.length <1){\n            db.allDocs().then(results=>{\n\n                setExamples(results)\n            })\n            \n        }else{\n            setSearching(true)\n            db.search(query).then(results=>{\n                setExamples(results);\n                setSearching(false)\n    \n            })\n\n    \n        }\n        setlastQuery(query)\n    }\n\n    return (\n        <SearchContextType.Provider value={{examples,handleQueryChange,searching}}>\n            {props.children}\n        </SearchContextType.Provider>\n    )\n}\n\nexport const useSearch =()=>{\n    return  React.useContext(SearchContextType)\n}","import React from 'react'\nimport { TextField, LinearProgress } from '@material-ui/core';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSearch } from '../searchContext';\n\nexport const SearchBar = (props)=>{\n    const search = useSearch()\n    const [debouncedCallback] = useDebouncedCallback(\n        // function\n        (query) => {\n            search.handleQueryChange(query)\n        },\n        // delay in ms\n        250\n      );\n    \n    return (\n<React.Fragment>\n        <TextField \n            type=\"text\"\n            label=\"Search for something\"\n            helperText={search.searching ? <LinearProgress /> : \"Runs a full text search on your data\" }\n            onChange={e=>{debouncedCallback(e.target.value)}}\n            fullWidth\n        />\n</React.Fragment>\n    )\n}","/* Wrapper component for a long list of examples. \nIt starts by showing the first N examples, without mounting the rest. As the user scrolls comonents are mounted and unmounted\n*/\nimport React from 'react'\nimport { makeStyles, Grid, Container, CircularProgress, } from '@material-ui/core';\nimport { List } from 'react-virtualized'\nimport { useDB } from '../db/dbContext.dexie';\nimport { Example } from './example';\nimport { SearchBar } from './searchBar';\nimport { useSearch } from '../searchContext';\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '&:focus': {\n            outline: 0\n        },\n\n        '&::-webkit-scrollbar': {\n            display: 'hidden'\n        }\n\n    }\n}))\nexport const ExampleList = (props) => {\n    const [height, setHeight] = React.useState(0);\n    const [width, setWidth] = React.useState(0);\n    const search = useSearch()\n    const ref = React.useCallback(node => {\n        if (node !== null && height === 0) {\n\n            setHeight(node.clientHeight);\n            setWidth(node.clientWidth);\n        }\n    })\n    const examples = search.examples;\n\n    const maxHeight = examples.length > 1 ? height / 3 : height * 2 / 3\n    const rowHeight = examples.length > 1 ? maxHeight * 2 : height\n\n\n    const exampleRenderer = ({ index, key, style }) => {\n        const example = examples[index]\n        return (\n            <Grid item xs={12} style={{ ...style,  }} key={key} >\n                <Example\n                    handleUpdateExample={props.handleUpdateExample}\n                    extraStyle={{ style }}\n                    orderIndex={1}\n                    key={example.id}\n                    example={example}\n                    anno_source={props.anno_source}\n                    schema={props.schema}\n                    maxHeight={maxHeight}\n                />\n\n            </Grid>\n\n        )\n    }\n    const classes = useStyles()\n    return (\n        <Container style={{height:'85vh'}}>\n        <div className={classes.root} style={{ position: 'relative', height: '100%', width:'100%', overflow: 'hidden' }} ref={ref}>\n        {examples.length} examples \n        <Grid container>\n            <List\n                height={height}\n                rowHeight={rowHeight}\n                rowRenderer={exampleRenderer}\n                width={width}\n                rowCount={examples.length}\n            />\n            </Grid>\n        </div>\n        </Container>\n    )\n}\n\n\nexport const SearchableExampleList =(props)=>{\n    const db = useDB();\n    const [examples,setExamples] = React.useState(db.allDocs())\n    const [lastQuery,setlastQuery] = React.useState(null);\n    const [searching,setSearching] = React.useState(false)\n    const handleUpdateExample = ()=>{\n        // Hack to update the examples once a class has been applied. Need to find a more performant way to do this. \n        handleQueryChange(lastQuery)\n    }\n\n    React.useEffect(()=>handleQueryChange(lastQuery),[db.step])\n    const handleQueryChange = (query)=>{\n        if (!query || query.length <1){\n            db.allDocs().then(results=>{\n\n                setExamples(results)\n            })\n            \n        }else{\n            setSearching(true)\n            db.search(query).then(results=>{\n                setExamples(results);\n                setSearching(false)\n    \n            })\n\n    \n        }\n        setlastQuery(query)\n    }\n return (\n     <React.Fragment>\n\n            <SearchBar onChange={handleQueryChange}/>  \n            {searching ? <CircularProgress/> : null}\n            <ExampleList examples={examples} handleUpdateExample={handleUpdateExample}/>\n\n     </React.Fragment>\n)\n }","import React from 'react'\nimport { DialogTitle, Dialog, DialogContent, IconButton, Toolbar } from '@material-ui/core';\nimport { DataIngestor } from './fileInput';\nimport { Add } from '@material-ui/icons';\nexport const DataInputDialog = (props) => {\n\n    const [open, setOpen] = React.useState(false);\n    return (\n        <React.Fragment>\n            <IconButton color=\"inherit\" onClick={() => setOpen(true)}>\n                <Add />\n            </IconButton>\n            <Dialog open={open} onClose={() => setOpen(false)}>\n                <DialogTitle>Add some data</DialogTitle>\n                <DialogContent>\n                    <DataIngestor />\n                </DialogContent>\n            </Dialog>\n        </React.Fragment>\n    )\n}","import React from 'react'\nimport { Fab, DialogTitle, Dialog, DialogActions, Button, CircularProgress, IconButton } from '@material-ui/core';\nimport { resetIndex } from '../../db/indexCache';\nimport { DeleteForever } from '@material-ui/icons';\nexport const ResetDBModal =(props)=>{\n    const [open,setOpen] = React.useState(false);\n    const [erasing,setErasing] = React.useState(false)\n    const handleClick = async ()=>{\n        setErasing(true)\n        await resetIndex();\n        setOpen(false)\n        setErasing(false)\n    }\n    return (\n        <React.Fragment>\n            <IconButton\n            color='inherit'\n                onClick={()=>setOpen(true)}\n            ><DeleteForever/></IconButton>\n\n            <Dialog open={open} onClose={()=>setOpen(false)}>\n                <DialogTitle>\n                    Erase all the data\n            </DialogTitle>\n            <DialogActions>\n            { erasing ? <CircularProgress /> :\n             <Button onClick={handleClick} variant=\"contained\" color=\"danger\">Yes Erase It</Button> \n            }\n            </DialogActions>\n            </Dialog>\n\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { ResetDBModal } from '../data/components/input/resetDBModal';\nimport { CardMedia, Avatar, Container } from '@material-ui/core';\nimport { SearchBar } from '../data/components/searchBar';\nimport { DataInputDialog } from '../data/components/input/inputDialog';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 120,\n    height: 60,\n  },\n\n}));\n\nexport const YLabelAppbar =(props) => {\n  const classes = useStyles();\n\n  return (\n      <AppBar position=\"static\" className={props.rootClass}>\n\n      \n        <Toolbar>\n\n          <Typography align=\"left\" variant=\"h6\" className={classes.title}>\n            Why Label When You Can Search ? \n          </Typography>\n          <DataInputDialog />\n          <ResetDBModal />\n\n        </Toolbar>\n      </AppBar>\n  );\n}\n","import React from 'react'\nimport { List, ListItem, ListItemIcon, ListItemText, Collapse } from '@material-ui/core';\nimport { Save, ExpandLess, ExpandMore, Ballot } from '@material-ui/icons';\nimport { DataInputDialog } from '../data/components/input/inputDialog';\nimport { ResetDBModal } from '../data/components/input/resetDBModal';\nimport { AddClassDialog } from '../data/classes/classRibbon';\nconst DataItems = (props) => {\n    const [open, setOpen] = React.useState(true)\n    return (\n        <React.Fragment>\n            <ListItem button key={\"Data\"} onClick={() => setOpen(!open)}>\n                <ListItemIcon> <Save /></ListItemIcon>\n                <ListItemText primary={\"Data\"} />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeoute=\"auto\" unmountOnExit>\n                <List>\n                    <ListItem>\n                        <ListItemIcon>\n                            <DataInputDialog />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Add More Data\" />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon>\n                            <ResetDBModal />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Delete All Data\" />\n                    </ListItem>\n\n                </List>\n            </Collapse>\n        </React.Fragment>\n    )\n}\nexport const DrawerItems = (props) => {\n\n    return (\n        <List>\n            <DataItems />\n            <React.Fragment>\n            <ListItem button>\n                <ListItemIcon>\n                    < AddClassDialog />\n                </ListItemIcon>\n                <ListItemText primary=\"Classes\" />\n            </ListItem>\n            </React.Fragment>\n\n        </List>\n    )\n\n}","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { YLabelAppbar } from './Appbar';\nimport { SearchBar } from '../data/components/searchBar';\nimport { CardMedia } from '@material-ui/core';\nimport { DrawerItems } from './drawerItems';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport const  ResponsiveDrawer = (props) => {\n  const { container } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} >\n      <CardMedia\n      style={{paddingTop:'25%'}}\n        image={process.env.PUBLIC_URL + '/img/logo.png'}\n      />\n\n      </div>\n      \n\n      <Divider />\n      <List>\n      \n          <ListItem >\n            <SearchBar />\n          </ListItem>\n      \n      </List>\n      <Divider />\n      <DrawerItems />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n        <YLabelAppbar handleDrawerToggle={handleDrawerToggle} rootClass={classes.appBar}/>\n      <nav className={classes.drawer} aria-label=\"Mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </div>\n\n)\n        }","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {Typography, Container, AppBar, CardMedia} from '@material-ui/core'\nimport { DBContext } from './data/db/dbContext.dexie';\nimport { ExampleList, SearchableExampleList } from './data/components/exampleList';\nimport { FileInput, DataIngestor } from './data/components/input/fileInput';\nimport { ClassContext } from './data/classes/classContext';\nimport { DataInputDialog } from './data/components/input/inputDialog';\nimport { ResetDBModal } from './data/components/input/resetDBModal';\nimport { YLabelAppbar } from './layout/Appbar';\nimport { SearchContext } from './data/searchContext';\nimport { ResponsiveDrawer } from './layout/drawer';\nfunction App() {\n  return (\n    <React.Fragment>\n      \n      <ClassContext>\n      <DBContext>\n        <SearchContext>\n      \n            <CssBaseline />\n            <ResponsiveDrawer />\n            <Container>\n            \n            \n            <ExampleList />\n            </Container>\n            </SearchContext>\n        </DBContext>\n      </ClassContext>\n      \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}